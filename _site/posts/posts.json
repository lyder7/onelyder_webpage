[
  {
    "path": "posts/finans_teori/",
    "title": "Finans Teori Porteføjer",
    "description": "Samling av notater fra mitt studie av finansiell litteratur og forskning rundt optimale portefølje-valg for institusjonelle investorer, hovedsaklig for det amerikanske markedet. Denne teksten er skrevet i akademisk stilart og fremstår som et dokument bestående av flere seperate utgaver/versjoner, og tekster jeg har skrevet tidligere om samme tema.",
    "author": [
      {
        "name": "Lyder Aleksander Mathisen",
        "url": "https://onelyder.com/about"
      }
    ],
    "date": "2021-10-21",
    "categories": [
      "Teori",
      "Portefølje",
      "Børs",
      "Investeringer",
      "Finans",
      "Eiendom"
    ],
    "contents": "\nMetode\nI denne seksjonen utleder jeg den generelle formuleringen for portefølje optimalisering. I hovedsak består analysen av minimalisering av risiko for et gitt mål for avkastning og betingelser. Først presenteres \\(mean-variance\\) porteføljen hvor risiko er målt basert fra data-sample kovarians matrise. I den andre delen utvider vi det generelle rammeverket fra @markowitz1959 [@markowitz1959], og går gjennom @cambell2005a metode som estimeres en dynamisk VAR modell [@cambell2005a]. I tillegg til risiko og mål for avkastning er betingelsene og rammene rundt portefølje optimaliseringen viktig. [@rmetrics2009p].\nPortefølje Allokering\nAnalysen starter med en investor som tar en avgjørelse for porteføljen over en investerings horisont som er \\(k\\) perioder i lengde. Investoren velger en mean-variance optimal portefølje, hvor portefølje momenter er estimert for horisontene. \\(R0t\\) er avkastningen til kontanter i periode \\(t\\), og \\(Rit\\) er avkastningen til aktiva \\(i\\) for periode \\(t\\).\nI modellen brukes avkastning i reelle termer. La \\(r0t=ln(1+R0t)–ln(1+\\pi)\\) være real-avkastningen til kontanter, hvor \\(\\pi\\) er \\(inflasjon\\). Avkastning for aktiva \\(i\\) er definert som mer-avkastningen over kontanter, \\(xt=ln(1+Rit)–ln(1+\\pi)–r0t=rit–r0t\\). \\(xit\\) er mer-avkastningen til aktiva \\(i\\) både i reelle og nominelle termer.\nAlle variablene i analysen er satt sammen i en \\(m \\times 1\\) vektor \\(zt\\), hvor fet-skrift indikerer vektor eller matrise. \\(xt\\) er en \\(n \\times 1\\) vektor med mer-avkastning fra \\(n\\) aktiva-klasser med i analysen. Inkludert kontanter, velger investor optimal portefølje mellom \\(n + 1\\) risikable eiendeler. \\(St\\) er en vektor av \\(m-n-1\\) faktor variabler brukt til å predikere aktiva avkastning.\nMean-Variance Portfolio\nFørste del av analysen presenterer en minimum varians (MV) portefølje med longonly betingelser. @markowitz1959 introduserte MV portefølje rammeverket i 1953, og er i dag mer enn 60 år siden fortsatt rammeverket og grunnpilaren i porteføljeteori og optimalisering [@markowitz1959]. Analysen kan i utgangspunktet gjøres på måter:\n1) maksimere avkastning for en gitt risiko mål\n2) minimere risiko for en gitt mål for avkasting.\nDenne oppgaven tar for seg tilnærming nr to i analysen.\nForutsetninger som generelt antas i en MV-modell er (i) porteføljen består av både risikable- og risikofrie eiendeler; (ii) prisene på aktiva klassene er eksogene og gitt; (iii) investorer er pris takere og påvirker ikke prisingen av aktiva; (iv) avkastningen har en kovarians matrise.\nMomenter for portefølje optimaliseringen er en vektet kovarians matrise, \\(w^T \\Sigma\\) , hvor \\(\\Sigma\\) er kovarians matrisen og \\(w\\) er vektene. Optimaliseringen er løst ved å definere et mål for avkastning, \\(r\\) og betingelsen om longonly og fullt investert.\nVektoren, \\(\\mu\\) , består av forventet avkastning (årlig), \\(\\mu_{i}\\) , for \\(N\\) aktiva klasser med i analysen. En \\(NxN\\) matrise danner kovariansen, \\(\\sigma_{ij}\\) , og variansen til avkastningen. Antagelse om normal fordeling, uavhengig og identisk distribusjon legges til grunn.\nGlobal Minimums Portefølje\nDen globale minimums porteføljen er løsningen på den porteføljen med lavest varians, gitt kovarians matrisen, \\(\\Sigma\\).\nDen nedre grensen for varians, \\(\\sigma\\) , kan løses kun dersom kovarians matrisen, \\(\\Sigma\\) , er kjent. I realiteten er ikke denne kjent, og vi må derfor estimere den basert på data fra finans markedene. Løsningen som typisk blir brukt til å estimere, \\(\\Sigma\\) , er å belage seg på historisk data. Det er også gjeldene for denne analysen også.\nBetingelser\nEt sett med regler(constraints) legges inn i modellen som løser optimaliseringa-problemene. Disse forutsetningene er hva vi antar om investor, og er rammene rundt modellen.\nMål for avkastning Den første betingelsen er definert med mål om å nå mål for avkastning. Verdien er basert på gjennomsnittet av en likevektet portefølje sin avkastning. Ved å regne ut forventet avkastning av en portefølje bestående av \\(n\\) risikable aktiva klasser, hvor hver aktiva har en \\(w\\) = \\(1/n\\).\nFullt Investert: Investor må være fullt investert. Det innebærer at vi antar investor velger å investere all sin kapital mellom alternativene gitt i analysen. Summen av alle vekter må derfor bli 1 (100%).\nLange Posisjoner: Investeringene som foretas kan bare være long. Det vil si at investor ikke har mulighet til å shorte. Kun lange posisjoner er tilgjengelig, og vektene fra modellen vil også vise positive vekter.\n\\(X\\) er aktiva avkastning, \\(wT \\Sigma \\mu = x\\) er portefølje mål for avkasting, \\(\\Sigma\\) er kovarians estimatet. Det er mange måter å teste funksjonen. Vi velger å optimalisere vektene som minimaliserer risikoen ved å bruke avkastningen fra likevektet portefølje som mål for avkastning og betingelser slik at:\nOptimal Portefølje Problemløsning:\nminimaliser \\(w^T \\Sigma\\) , Covariance Risk\nsubjekt til (gitt betingelsene)\n\\(w = (w_{1}, w_{2}, …, w_{N})^T > 0\\) Lange Posisjoner.\n\\(\\sum_{i=1}^{N}w_{i} = 1\\), Fullt investert.\n\\(wT \\Sigma \\mu = x\\), Mål avkastning.\nEiendoms spesifikke hensyn\nDenne analysen har særlig fokus rettet mot eiendom som finansiell aktiva, Av den grunn ønsker vi å bygge modellen slik at vi kan svare på sentrale spørsmål om eiendom. Som allerede kunngjort i litteratur delen lenger oppe, er likvidere en av de mest sentrale faktorene for løsningen av portefølje-vekt. Av den grunn har vi fokus mot å modellere porteføljevekter over lenger tidshorisonter, enn hva standard fremgangsmåte vil være. Formålet er å avdekke hvordan anbefalingene til vekter optimaliseringa algoritmen gir oss, når vi legger til grunn horisonter over 1 år.\nPå kort sikt er det stor sannsynlighet for at standard årlig avkastning og ett års horisont vil gi skjeve resultater. Resultatene i denne analysen viser derfor optimale porteføljevekter som en funksjon av konstanten \\(k\\), som betegner antall horisonter for investeringen.\nMomenter\nDynamisk VAR modell\nLa oss starte med en dynamisk metodikk for å estimere momenter til bruk i portefølje optimalisering. Sammen med \\(n+1\\) risikable aktiva klasser og kontanter, tar vi med 3 ekstra state-variabler godt egnet til å predikere avkastning. Estimeringen gjennomføres i programmeringsspråket R ved bruk av pakken vars som har de funksjonene som er nødvendig. Tekniske spesifikasjoner og informasjon spesifikt rundt algoritmen finnes detaljert beskrevet i @varsR sitt paper, og i syntaks referansen for påfølgende pakke [@varsR2; @varsR].1\n@cambell2005a antar en kjøp-hold investor som er opptatt av real avkastning. La \\(zt+1\\) være en vektor som inkluderer log-avkastning for aktiva klassene og faktor variabler som predikerer avkastning. Anta en VAR(1) modell som fanger opp det dynamiske forholdet mellom aktiva avkastning og faktor variabler: Løsningen av optimale porteføljer er gjort med samme oppsett og struktur for momenter og portefølje-forutsetninger. Forskjellen er hvordan estimeringen foretas, og hvordan man tolker kovarians matrisen. Ved bruk av variabler egnet til R for aktiva klassene \\(n + 1\\) elementer, estimerer vi en VAR modell [@cambell2005a].\nSentralt rundt VAR estimering er hvilket forhold investor har til risiko, og hvilke forutsetninger som legges til grunn ved bruk av denne metoden. Det er stor forskjell sammenlignet ved å estimere gjennomsnitt fra sample. For det første vet investor det at risikoen fortsatt vil være konstant over tid, men den vil være annerledes over langere tidshorisonter. Det medfører også at risikoen kan forandre seg, og det betyr da at risikoen kan være større, men også mindre basert på resultatene. Med andre ord, risikoen er ikke gitt. Den er ikke flat, slik som den ofte fremstilles ved å skalere kun opp til årlig basis.\nSamtidig ønsker vi å understreke at det kun er risikoen, altså variansen, vi modellerer som betinget. Forventet avkastning lar vi være ubetinget, og setter derfor gjennomsnittet av inngående data som avkastning mål + at vi skalerer den opp med antall horisonter \\(k\\).\nBasert på estimert VAR(1) modell, og predikere av avkastning k horisonter frem i tid, kan vi på bakgrunn av disse resultatene modellere utviklingen i risiko målt i varians gitt horisonten k, og dermed løse optimale porteføljer over flere horisonter [@cambell2005a].\nTil input i modellen definerer vi en data-matrise \\(z\\), bestående av \\(n+1\\) aktiva klasser og \\(m\\) state-variabler. I dette tilfellet er \\(n+1 = 4\\), og \\(m=3\\). Som betyr at vi har totalt \\(k\\) endogene variabler i VAR modellen. I dette tilfellet er \\(k=8\\).\nResultater\nVariabler valgt til å predikere er T-BILL YIELD, TERM SPREAD og DIVIDEND YIELD.2 Variablene er valgt med utgangspunkt i @Mac2009 sitt paper, hvor det også her estimeres en VAR(1) modell ved bruk av samme variabler. @Rehring2012 og @Delfim141 estimerer også en VAR(1) i sammenhengen eiendomsinvesteringer og portefølje optimalisering, men har i tillegg til nevnte variabler til brukes i denne modellen, også med andre variabler til å supplere med. Til felles har alle nevnte artikler lagt til grunn @cambell2005a sitt generelle rammeverk for estimering av VAR(1) modeller til bruk for portefølje optimalisering bandt finansielle aktiva klasser [@cambell2005a; @Mac2009; @Rehring2012; @Delfim141].\nBasert på VAR-resultatene gir modellen oss en kovariansmatrise som inneholder informasjon om variansen og kovariansen mellom aktiva klassene. Vi er i utgangspunktet kun interessert i aktiva klassene, og vil derfor bare hente matrisene til de totalt 5 variablene. De 3 andre variablene som representerer state er ikke av interesse etter estimering.\nRå-resultatene fra VAR estimeringen, gjør at vi kan beregne standardavviket. For å sammenlike mellom klassene ønsker vi anualiserte verdier. Det finner vi ved å skalere med antall kvartaler \\(k\\), deretter multiplisere med anualisert faktor \\(4\\). Kvadratroten av dette blir årlig standardavvik. 3\nVi deler altså variansen med \\(k\\) antall kvartaler i horisonten, deretter ganger vi ut med fire slik at vi får årlig varians. Kvadratroten av dette er årlig standard avvik. Inngående data er oppgitt i kvartals frekvens. For å sammenligne porteføljemomentene avkastning og risiko, skaleres ofte verdiene opp til årlige frekvenser. AV den grunn blir det lettere å avgjøre hvordan avkastninga fordelingen skiller seg ut mellom aktiva klassene.\n“VAR RESULTATER HER”\nTermin Struktr Risiko\n“PLOT ÅRLIG STD:AVVIK HER”\nResultatene viser hvordan den årlige risikoen, målt i standardavvik utvikler seg ettersom \\(k\\) blir større. For hvert punkt \\(k\\) i grafen, vises den årlige risikoen. Den regner vi om fra rådata VAR modellen gir oss. Vi deler altså variansen med \\(k\\) antall kvartaler i horisonten, deretter ganger vi ut med fire slik at vi får årlig varians. Kvadratroten av dette er årlig standard avvik.\n$$ sett opp formel her $\n\nAnalysen bruker programmeringsspråket R, med tilhørende pakker/funksjoner tilgjengelig gratis for alle. Andre detaljer, dokumentasjon og informasjon av materiale brukt til å løse denne analysen finnes i Appendiks. Du kan også besøke adressen onelyder for detaljert kode drøfting fra forfatter av denne teksten.↩︎\nAndre variabler som M2, IP og UNRATE ble også testet, men på grunn av ønske om modell simpel het ble disse ikke valgt med i den endelige variabelen “z”.↩︎\nFølger @Mac2009 sin beskrivelse for å finne annualisert standardavvik fra VAR(1) estimatene. Se s.126.↩︎\n",
    "preview": {},
    "last_modified": "2021-10-23T18:42:51+02:00",
    "input_file": {}
  },
  {
    "path": "posts/linker_mappe/",
    "title": "Fagressurser & Lenker til matriale",
    "description": "Personlig samling av verdifulle ressurser jeg har kommet over underveis. Formålet med dette dokumentet er å skape et sted hvor jeg enkelt kan lagre innhold og matriale som kan være nyttig å bruke i fremtidige prosjekter. Innholdet i dette dokumentet er ikke referert eller satt opp formelt. Dette er kun ment som et hjelpemiddel for meg selv, og et forslag til hvordan et slikt notatark kan see ut til inspirasjon til andre.",
    "author": [
      {
        "name": "Lyder Aleksander Mathisen",
        "url": "https://onelyder.com/about"
      }
    ],
    "date": "2021-10-21",
    "categories": [
      "R",
      "R-studio",
      "Referanser",
      "Fag"
    ],
    "contents": "\nR-code & Packages\nIn this section I will storage material useful for R-studio and R-code. References will be somewhat related to R, but mainly will these links be brought about academic writing, workflow and project management. It also const of Github users, thereabout frameworks and rich content regarding modelling, time series, data and analysis.\n\nmiltonfmr (quant-site)\nhttps://miltonfmr.com/complete-list-of-libraries-packages-and-resources-for-quants/\n\nTime-series\nhttp://www.time-series.net/\nFound this when I serched for material regarding VAR. Think I first found this link:http://www.fsb.miamioh.edu/lij14/ and this time-series via that. It should be a lot of example and framework relatied things regarding R-code, finance, but also academic list and material…\nCode https://sites.google.com/view/davidgabauer/econometric-code\nGithub: https://github.com/GabauerDavid/ConnectednessApproach\nR-workbooks: https://sites.google.com/view/davidgabauer/use-rpython\nNotes: I have testet some of the source files and scripts, and it looks very nice! I finally have found a script that cointains functions and setups necesssary for forcasting matrix`s over differant time-periods. I have stored the files on my mac-PC. ConnectednessApproach-master & firefox_files & dy2012_copi are foldes containing source code on my desktop.\n\nropensci\nhttps://ropensci.org\nData, software & reproducibility\n\nPackages, functions & librarys available in R\n\nHere I will store packages I personally find usefull. These packages will in general relate to datasience, finance and time seres modelling. But also r-markdown and reproducable reaserch document packages.\nMaterial\n\nR-Markdown & Reproducable Reasearch\nUlyngs (oxford template)\n-   <https://github.com/ulyngs/oxforddown>\nNTNU Latex og stil\nhttps://github.com/COPCSE-NTNU/master-theses-NTNU/tree/master/ntnuthesis\nhttps://www.math.ntnu.no/emner/TMA4268/2018v/1Intro/\n\nrstudioapi\nhttps://cran.r-project.org/web/packages/rstudioapi/rstudioapi.pdf\nbrukes feks til theme edit\n\nformatr\nhttps://yihui.org/formatr/#2-reformat-r-code\n\nBookdown\nhttps://bookdown.org/\nhttps://www.r-bloggers.com/2018/08/how-to-self-publish-a-book-customizing-bookdown/\nhttps://bookdown.org/ (alle bøkene)\n\n\nRiffomonasProject\nYoutube-Bruker: RiffomonasProject https://www.youtube.com/c/RiffomonasProject\n\n\nData Wrangeling\ntidyverse (General Package for Data Sience)\nbook: https://r4ds.had.co.nz/\ndplyr\nreadr\nlubridate (time, dateobject)\nOverview of packages https://www.tidyverse.org/packages/\n\n\nNickCHK\nYoutube-Bruker: NickCHK\n\nR-Hubs: https://rpubs.com/NickCHK/\n\n\nStatistical/Econometric models\n(empirical oriented)\nMTS (VAR framework)\nTsay, R. S\nhttps://github.com/d-/MTS/blob/master/R/MTS.R\nbook: Tsay, R. S. (2014). An Introduction to Analysis of Financial Data with R. John Wiley & Sons.\nTsay, R. S. (2013). Multivariate Time Series Analysis: With R and Financial Applications. John Wiley & Sons.\n\nNTS (Nonlinear Time Series Analysis)\nTsay, R. S\nhttps://faculty.chicagobooth.edu/ruey-s-tsay/research/nonlinear-time-series-analysis\n\nProf. Daniel P. Palomar (VAR/ARMA Vingette)\nhttps://palomar.home.ece.ust.hk/MAFS6010R_lectures/Rsession_time_series_modeling.html\nhttps://cran.r-project.org/web/packages/portfolioBacktest/vignettes/PortfolioBacktest.html\n\nFinance, Risk, Timeseries, Optimization functions\nFinance View Cran\nAll finance-related packages on R (CRAN). Amazing.\nhttps://cran.r-project.org/web/views/Finance.html\n\nintrocompfinr\nLink Introcompfin\n\nRmetrics (Framwork, several packages published)\nPDF-book Portfolio Optim: https://www.rmetrics.org/downloads/9783906041018-fPortfolio.pdf\nRmetrics fPortfolio vignette(GOOD) part 1 & 2:\nP1: https://miltonfmr.com/the-complete-guide-to-portfolio-optimization-in-r-part1/#rollstats\nP2: https://miltonfmr.com/the-complete-guide-to-portfolio-optimization-in-r-part2/\n\n\ntidyquant (Finance)\nlink: https://business-science.github.io/tidyquant/\n\nBLCOP (Black-Litterman model framework)\nlink: https://cran.r-project.org/web/packages/BLCOP/vignettes/BLCOP.html\ninstall: install.packages(“BLCOP”, repos=“http://R-Forge.R-project.org”)\nFound via: https://r-forge.r-project.org/R/?group_id=156\n\nQRMtools(general functions finance)\nI found this on youtube sometime when I studied for my exams. I have stored the link ever since, very nice and powerful tools and knowledge sharing!\nhttps://cran.r-project.org/web/packages/qrmtools/vignettes/geometric_risk_measures.html\nhttps://www.qrmtutorial.org/r-code?fbclid=IwAR1Qnkkq9d_Gt28-ptQmTmLpbIcGNwMudKxYyKFONKgkfWoa8X8p1HIXLg4 \n\nFRAPO\nhttps://www.pfaffikus.de/books/jwex2/\nhttps://www.pfaffikus.de/\n\nBlogroll: Finance & R-code\nFound this link via rgarch packages site on CRAN: http://www.unstarched.net/ via this link I found this link http://www.unstarched.net/blog/ and violah: I came here https://www.portfolioprobe.com/2012/01/05/the-top-7-portfolio-optimization-problems/ which gave me this blogroll https://www.thertrader.com/ with a nice vignette: https://www.thertrader.com/2017/06/04/linking-r-to-iqfeed-with-the-quanttools-package/\nThis is a good example of how quick, but also contentrich, the R-community, and especially for finance are!! There are so much interessting content, most likley written by the smartest/best people, availible for free! This happends all the time when I am searching around looking for packages, functions or methods I can use for my own project. I end up reading or studiung cases/ functions that is not actuelly what I am suposed to do… The only downside about R, is that you probebrly are going to burn out much of your planned work hours. So stay orginzed, but also; take some time enjoying what`s out there!! I am feeling blessed, really.\nBLOG-ROLL\nThe R Trader\nlink: https://www.thertrader.com/\nr-bloggers\nlink: https://www.r-bloggers.com/\ndatacamp.\nlink: https://learn.datacamp.com/\nGenerelle Notes\nIn this section I indtend writing down my own personal “studing” notes, and make space for chapters/parts for themes I find interessting writing notes aboout. These notes are written during a typical working sesh, or just another day I find it interessting searcing around the AMAZING community for datasience resoruces!\nMy notes could be anything within the category of datasience, modelling, finance and escpacially R. I want to gather my notes in one place(folder), in the hope of possible utizlizing a connection I suspect may excist between themes I learn about during my work sessions. Said in another way; You may find random themes and paragraphs here.\nFile types, how to store them and key differences\nIt dosent matter what kind of analyst you are trust me. R, Python, Java, C, C++, S or wathever; file-types and folderstructure is key if you want to master, or just even use code and programming-languages efficient. As a result of that, I indtend storing my own personal notes from studiong/resarching about filetypes I have often met when I have coded/worked on my own personal prosjects.\nI have felt both the frustration and the irritation of not understanding/taking enough time understanding what Its really all about. As a matter of fact, If you dont understand how the algoritm likes he`s food served.. you actuelly deserve beeing tortured by error messages. At least coused from not handling your files proper. It may sound wierd, but it could exist a kind of relashionship between algortims and humans in the sens of treting whats deare in the proper way. File and data is the maintance for the script!!!\nBelow I write down extention-names on filetypes I recollect on the go. If the [] box is emtpty, it means I have not started researching properly yet.\n\nCSV[x] XLS[x] zip[] gz[] tsv[] txt[]\n\nCSV -> stores the data as text. Can only store the values, not formatting and formulas etc. \nXLS -> stores data binary file. Readable for the computer. Can store values, formatting……\nMATERIAL FEEDER\nHere I will “feed” the block with links, notes, refs and material I explore. These need to be placed in the right sections. This part is then not included in the official “document” and will be removed when there`s eventuelly no more links to feed. I have placed this feed-block on the top of the document so I can easily see it, and start sortering when i begin a work section.\nfile:///C:/Users/lyder/Desktop/Bibliography-/Notes/bookmarks_7_15_21.html\nORGANISER DETTE!\n## Linker\nhttps://libraries.io/cran/RefManageR\n\nhttps://books.ropensci.org/drake/index.html\n\nhttps://www.youtube.com/watch?v=jU1Zv21GvT4&t=4055s\n\nhttps://www.rstudio.com/resources/rstudioglobal-2021/maintaining-the-house-the-tidyverse-built/\n  \nhttps://docutils.sourceforge.io/docs/ref/doctree.html#image\n\nhttps://books.ropensci.org/drake/index.html\n\n  \n  \n## PDF\nR-litteratur: mappe skrivebordet!!\n\nHar også sett på apperence_themes: shiny. \n\nIntro (START)\nThis document contains notes, links, referances and matarial I have used throughout the prosses.\n\n\n\n\nRefs to my own work stored some_where\nOutput github “test” https://github.com/lyder7/thesis-rasp/blob/master/r-markdown/test-html/test.md\nDenne har bilder, og formattering slik som html versjonen hadde. Fant denne linken via thesis-rasp\n\nResultater lagret i txt dokument https://github.com/lyder7/thesis-rasp/blob/master/r-markdown/test-html/resultater.txt\ntest.Rmd https://github.com/lyder7/thesis-rasp/blob/master/r-markdown/test-html/test.Rmd\ngenerelt lagret https://github.com/lyder7/thesis-rasp/tree/master/tekst\n\n\n",
    "preview": {},
    "last_modified": "2021-10-23T18:43:54+02:00",
    "input_file": {}
  },
  {
    "path": "posts/tanker_rkode/",
    "title": "Tanker & Ideer om Koding i R",
    "description": "Utkast fra et større prosjekt jeg driver med angående koding og bruk av R. Deler biter av noe av innholdet jeg har skrevet så langt.",
    "author": [
      {
        "name": "Lyder Aleksander Mathisen",
        "url": "https://onelyder.com/about"
      }
    ],
    "date": "2021-10-21",
    "categories": [
      "Teori",
      "Portefølje",
      "Børs",
      "Investeringer",
      "Finans",
      "Eiendom"
    ],
    "contents": "\nMitt Studie av R\nTidyverse og tidy strukturen\nI dag har jeg endelig fått tak i en bok som tar for seg R programmering. Har ventet lenge. Boken jeg har lånt fra universitets biblioteket NTNU i Gjøvik er skrevet av @wickham2016r, og heter R for Data Science [@wickham2016r].\nJeg kan referere til boken via references.bib dokumentet mitt, så dette notatet tar for seg @wickham2016r sin R bok. Her er formålet å lære om tidyverse og tidy prinsippene. I tillegg går man litt mer i dybden på funksjoner og mer “avanserte” temaer. Leser som sagt denne boken i ekte format, da jeg har fått lånt meg den på fra NTNU sitt universitetsbibliotek i Gjøvik. Tar notater underveis når jeg har tid, og bruker tid på de temaene jeg synes er spennende og som jeg vet fra før av jeg vil lære mer om. Eller som jeg trenger trening på [@wickham2016r].\nMest sannsynlig har jeg lest, eller mer presist skummet over boken i digital versjon fra tidligere. Men jeg synes det er noe eget å ha innholdet i en ekte bok. Tror det er bra å tilnærme seg innhold slik, så ikke alt skjerm på PC skjermen. For det kan bli litt mye noen ganger.\nOppdaterer referanse dokumentet underveis som jeg kommer over litteratur som er relevant spesifikt for notatene fra denne boken.\nLink til digital versjon her\nForventninger\nFøler meg egentlig ganske spent og nysgjerrig på å ta fatt i boken. Det jeg håper å lære er å knekke “koden” til å beherske dette med funksjoner. Altså det å ha ferdigheten til å kunne lage funksjoner helt fra bunn og prosessen ved å lage den fra start til slutt. Og ikke minst evnen til å identifisere når man trenger å lage sin egen funksjon, og deretter designe funksjonen til å løse problemet.\nI hovedsak tar jeg notatene mine inne i dette dokumentet for å samle alt under “ett sted”. Men jeg har også laget et R.script lagret i en mappe kalt R hvor jeg tester ut funksjoner + div jeg prøver meg på underveis. Det vil da være supplement til dette hoveddokumentet.\n1\nTidy data og rammeverket rundt fokuserer i hovedsak på det som går under kategorien “small, in-memory datasets”. Men allikevel så vill metodikken, strukturen og rammeverket rundt Tidy data, fortsatt klare å håndtere flere hundre megabite data. Faktisk et sted mellom 1-2 GB når man blir skikkelig god. For data større enn 10GB-100GB vil data.table være et bedre alternativ.\nDet man bemerke seg i den forbindelse, er det faktum at det er forskjellige rammeverk avhengig av dataene du jobber med. Tidy er for den minste delen, som passer for de aller fleste oppgaver. data.table er for neste steg hvor vi begynner snakke Big data.\nDisse rammeverkene har ulike prinsipper og “regler”, så det kan være forvirrende og lære seg begge to samtidig. data.table er f.eks vanskeligere å lære enn tidy. Mye på grunn av at strukturen må være mer direkte, og mindre rom for frihet å behandle data mer effektivt. Til motsetning fra Tidy som har rom for mer frihet, men allikevel kan håndtere relativt sett store mengder med data effektivt. Tidy regnes som en effektiv måte å kode på, gitt at man bruker til data sett som er egnet. Det til forskjell fra f.eks bruke basic funksjonene.\nTidy fokuserer på rektangulær data. Det vil si verdier som er assosiert med en variabel og en observasjon. Data som ikke er slik er f.eks bilder, lyder eller tekst.\n2\nLaster inn tidyverse pakken her under. Prøver meg litt frem sammen med eksempler fra boken, og leker meg litt med data for å bli endra tryggere på tidy syntaksen. Har gjort store steg allerede, og mener selv at jeg forstår logikken. Men tror jeg allikevel har mulighet til å fange opp noe nytt. ˆ\nViktig å legge merke til disse forskjellene det refereres til kode:\nFunksjoner har kodetekst etterfulgt med parentes: mean() eller sum()\nObjekter har bare kodetekst uten parentes: data eller x\nDersom det er nødvendig å spesifisere hvilken pakke en funksjon skal brukes fra betegnes det med pakken sitt navn etterfulgt av dobbel kolon: dplyr::mutate()\nIn R intruction words are a group of terms used for giving instructions to the termninal of what is comming. For exmaple function, for and if / else are the most commonly used instruction words. They defines that there is going to be instructions the terminal need to consider when evaluationg the code. Other defoult keyword for instruction words are: if else repeat while function for in next break TRUE FALSE NULL NA Inf NaN\nNext we have base words.\n3\nggplot2\ngeom\ngeom_point\n\ngeom_smooth\n\n\nEt geometrisk objekt som brukes for å representere data. Avhengig om det er et bar-chart, line-chart, boxplot eller scatterplot. De bruker ulik geom.\n4\npryr::object_size\nFUNKSJONER\nTing jeg må sjekke ut:\nswitch()\nIndeksering, kan jeg bruke til matriser?\n\nSom det kommer frem i boka, den gyldne regelen for funksjoner i R er at det siste argumentet, eller den siste linjen, er det som returenes. Sjekk @wickham2016r s.286.\nI dette kapittelet går jeg gjennom sentrale, men også viktige måter å laste inn data til R. Selv om det høres “usexy” ut, og kanskje en smule fundamentalt, kan jeg allerede fortelle at innlasting av data er et eget fag. Og en kunst i seg selv. Personlig er dette et område jeg savner opplæring i fra universitetet. Satt i perspektiv lærte vi vel faktisk ingenting om et tilsynelatende viktig tema…\nText, csv\nDe aller fleste av oss er kjent med filtyper som slutter med “.csv”. Mest sannsynlig har du kjennskap til notasjonen fra excel ark vil jeg anta. csv betyr enkelt sagt at data er lagret som tekst, og at kolonnene er er separert med “,”. Slik klarer R, PC din og andre verktøy å lese dataene, og laste den inn “riktig”.\nSentralt rundt nettopp csv filer er at de er også leselige for mennesker. Strukturen data er lagret med har samme logikk om du vil, slik som vi ser for oss kolonner og rader. Det er dog viktig at du endrer desimalskille tegn på pc du bruker, slik at tall med desimaler bruker “.”.\nI R kan du laste inn dataene med funksjonen read.csv() som er den generiske base funksjonen allerede installert.\nDet anbefales at du bruker read_csv() funksjonen fra readr pakken. Årsaken er at sistnevnte metode er mer effektiv og gjør prosessen med å laste inn data, samt behandle den mer “smud”. I tillegg blir data lastet inn i tibble format, som også er kjekt.\n.rda filer, binare data strukturer\nsaveRDS() og readRDS() er to funksjoner som lagrer R-objekter. Disse blir lagret som binomisk filer. I istedenfor at dataen blir lagret som en tekst objekt, slik som ved csv, kan du med .rda filer lagre spesifikke R-objekter. Den tar vare på strukturen, så dersom du vil lagre et data sett i en spesiell class, f.eks som xts er dette måten å gjøre det på.\nNår du laster inn objektet på et senere tidspunkt, vil dataene bli lastet inn eksakt slik som den ble lagret.\nForskjellen er at disse filene går under kategorien “ikke leselige for mennesker”. De blir lagret på en mer effektiv måte, som går på bekosting av enkelhet.\nPipe\nI R brukes ofte syntaksen %>%, og kanskje er det noe kjent med dette symbolet når du ser det? I isåfall er det en grunn til det. Det er en relativt ny “oppfinnelse” som gjøre koden mye mer effektiv, og forhindrer at maskinen blir utmattet. Koden blir raskere.\nFør man setter seg ned for å faktisk forstå hva denne %>% greia er, så er den egt bare et hinder og helvette i starten. Den ser bare rar ut, og hvis du mot formodning forsøker å ta den inn i egen kode så funker det ihvertfall ikke. Og alle bruker den i mauler du ser på. Den er bare som et vei bom. Slik har jeg opplevd den.\nMen den faktiske jobben til denne karen, som vi kaller for pipe og referer til som %>%, det er å transformere resultatet av en funksjon over til neste. Unngå mellom kjøringer og unødvendige objekter, for å gjøre koden mer “dry” og “clean”. Det gir raskere kode, som gir bedre ytelse som igjen gjør alt bare bedre.\nUtfordringen med nettopp pipe er å sette seg inn i strukturen, og tilpasse seg endringene det medfører. Fra slik du kanskje er vant til fra før. I utgangspunktet gjør koden akkurat det samme, men syntaksen blir ganske betydelig annerledes, med tanke på hvordan du referer til forskjellige ting. Den gode nyheten er at når du først forstår strukturen (som alt annet), så blir scriptet du har laget enda mer logisk og den åpner ideer g muligheter som du kanskje ikke har “klart” enda. Men som plutselig lar seg gjøre nå.\nRio, alle filtyper og formater\nRio pakken har effektive funksjoner vi kan bruke til å laste inn (importere) data til R. Fordelen med denne pakken er at omtrent alle filtyper er mulig slik at man i prinsippet kan analysre data for de fleste formål. Det gjør R til en unik statistisk data plattform. Det som ytterligere gjør denne pakken enestående er måten den er bygget på. Koden til funksjonene vi bruker er skrevet på en effektiv og elegant struktur, så RAM og PC du jobber med ikke skal bruke unødvendig ressurser når det ikke trengs. Dette er en del av tidy prinsippene og sett og vis gramatikken for datasett på størrelse opp til 2 GB i R miljøet [@rio; @rioformat; @tidyverse; @wickham2016r]\nhttps://datacarpentry.org/R-ecology-lesson/03-dplyr.html#Challenge\nProgrammerings språk: En oversikt\nMin preferanse er rettet spesifikt mot R og R Studio sitt ramme verk for håndering av syntax gjennom R terminalen. Dette var det første språket jeg ble introdusert til via Data Science fag i mitt studie, og har siden vært språket jeg har fortsatt og utvikle meg. Av den grunn vil jeg alltid ha et spessielt forhold til R.\nR Wikipedia\nMen det er mange andre programmeringspråk. R sammenenlignet med disse er bare en liten nisje i forhold, og er på mange måter vidre utviklet basert på de eldste gutta i klassen. I denne delen er hensikten å presentere noen av språkene som er mest kjent, og diskutere samt poengtere hva de kan brukes til og hva som vil være nærliggende og bygge videre på.\nTil inspirasjon har jeg lest @mikke14 sin artikkel hvor han tar for seg 14 språk og deres funksjonaliteter. Denne artikkelen er basisen for innholdet [@mikke14].\nDet finnes også flere kode språk som man burde nevne i en debatt som denne. @tobeindex er en index som viser de mest brukte programmeringspråkene i verden, med løpende oppdatering. Denne kan være til nytte dersom du er nysgjerrig og vil vite mer om hvilket gigantisk hav av muligheter som finnes der ute [@tobeindex].\nVeien videre fra R og R Studio\nSelv om man har forkjærlighet for en struktur, et miljø og et felleskap for hvordan ting kan gjøres er det naturlig å ta steget videre og utforske de andre språkene. Når man har lært seg grunnleggende sammenhenger og virkelig funnet interessen, samt forstått hva kode egentlig kan brukes til, samt omfanget det kan brukes til, er dette utentvil den riktige veien å gå.\nFor det er slik at koding har vært utviklet over en ganske lengere periode enn hva vi først tenker. Hvertfall var det slik for meg. Relativt sett er det ikke snakk om lang tid, men jeg vil anta en person som ikke kan noe om koding vil tippe starten av 2000-tallet som tidligst start for utvikling av slike språk.\nLink Personlig Nettside\nAppendiks\nReferanser\n\n\n\n",
    "preview": {},
    "last_modified": "2021-10-23T18:44:35+02:00",
    "input_file": {}
  }
]
